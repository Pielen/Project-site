"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/project-site/index.html","2bce654a631d10d4b082e300c91d777f"],["/project-site/static/css/main.45041e66.css","5bc4262a2cf5c80ccd49d3e0ef380905"],["/project-site/static/js/main.cc41818b.js","f79cc977d378f65d64ccc8ec3ae8ef50"],["/project-site/static/media/Nisse_logo1.d11bcd14.png","d11bcd141be1c3f4869470160a72bf86"],["/project-site/static/media/about.aea4f98c.scss","aea4f98c24b1bdff1a387372e8748cfb"],["/project-site/static/media/adam.347647a8.jpg","347647a8d22fbdde27b7ba5ba86ef6b0"],["/project-site/static/media/demovideo.5649f0d5.scss","5649f0d51a92d536ff65cfda635778ac"],["/project-site/static/media/github.da8b35af.png","da8b35af0b2c949326eea5e5360c14a0"],["/project-site/static/media/header.d1faefdd.scss","d1faefdd33a854d417f6abc8a4c4f2da"],["/project-site/static/media/linkedin.54686ee4.png","54686ee48403d51bf34501ab4fb2b100"],["/project-site/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/project-site/static/media/media.94cdbe59.scss","94cdbe5941ce21327f139b067dd5e340"],["/project-site/static/media/membercard.2d9a73f1.scss","2d9a73f1ef0db4d27774d517f18cf10f"],["/project-site/static/media/saturn.4d7a3058.png","4d7a3058a58e95f0559797f10223670e"],["/project-site/static/media/startpage.4e3fc6ac.scss","4e3fc6acfdd6a957353855688f613020"],["/project-site/static/media/team.2e835ae4.scss","2e835ae4174270d07dc97d117eb932be"],["/project-site/static/media/topbar.96320ebc.scss","96320ebc3bbf4416301a3716426c690b"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,r){var n=new URL(e);return r&&n.pathname.match(r)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],r=new URL(t,self.location),n=createCacheKey(r,hashParamName,a,/\.\w{8}\./);return[r.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var r=new Request(a,{credentials:"same-origin"});return fetch(r).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),r="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,r),t=urlsToCacheKeys.has(a));var n="/project-site/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(n,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});